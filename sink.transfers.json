{
    "name": "TransfersSinkConnectorSchema",
    "config": {
      "topics": "transfers",
      "connector.class": "org.neo4j.connectors.kafka.sink.Neo4jConnector",
      "key.converter": "org.apache.kafka.connect.storage.StringConverter",
      "key.converter.schemas.enable": true,
      "key.converter.schema.registry.url": "http://schema-registry:8081",
      "value.converter": "io.confluent.connect.json.JsonSchemaConverter",
      "value.converter.schemas.enable": true,
      "value.converter.schema.registry.url": "http://schema-registry:8081",
      "neo4j.uri": "neo4j://neo4j:7687",
      "neo4j.authentication.type": "BASIC",
      "neo4j.authentication.basic.username": "neo4j",
      "neo4j.authentication.basic.password": "password",
      "neo4j.cypher.topic.transfers": "WITH __event AS event MERGE (from:Account {address: event.from})\nMERGE (to:Account {address: event.to})\nMERGE (from)-[r:TRANSFER {contract: event.contract, symbol: event.symbol}]->(to)\nON MATCH SET r.amount = toInteger(COALESCE(r.amount, 0)) + toInteger(event.amount)\nON CREATE SET r.amount = toInteger(event.amount)",
      "neo4j.cypher.bind-header-as": "",
      "neo4j.cypher.bind-key-as": "",
      "neo4j.cypher.bind-value-as": "__event",
      "neo4j.cypher.bind-value-as-event": false
    }
  }